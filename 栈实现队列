public class Stack2Queue<E> {

    //使用两个栈实现队列
    private Stack<E> stack1;
    private Stack<E> stack2;

    public Stack2Queue() {
        stack1 = new Stack<E>();
        stack2 = new Stack<E>();
    }

    public void offer(E a) {
        stack1.push(a);
    }

    public E pop() {
        if(stack2.isEmpty()) {
            change();
        }
        return stack2.pop();
    }

    public E peek() {
        if(stack2.isEmpty()) {
            change();
        }
        return stack2.peek();
    }

    public boolean isEmpty() {
        return stack1.isEmpty() && stack2.isEmpty();
    }


    //将1栈中取出存到2栈中
    private void change() {
        while(!stack1.isEmpty()) {
            stack2.push(stack1.pop());
        }
    }
}
